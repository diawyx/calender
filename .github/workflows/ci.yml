# .github/workflows/ci.yml
name: CI Pipeline - Scan with SonarCloud, Build Image, Push to Docker Hub.

on:
  push:
    branches:
      - main # Ini hanya akan terpicu pada push ke branch 'main'
  pull_request:
    branches:
      - main # Ini akan terpicu pada pull request ke branch 'main'

env:
  # Nama image di Docker Hub (otomatis menggunakan nama repository GitHub kamu)
  # Kamu bisa menggantinya jika ingin nama image yang spesifik.
  DOCKERHUB_IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  # --- Job 1: Code Quality, Testing, and SonarCloud Scan ---
  code-quality-and-test:
    name: Code Quality Scan & Tests
    runs-on: ubuntu-latest
    # permissions:
    #   contents: read # Default permissions should be enough, but explicitly stating is good.
    #   security-events: write # If SonarCloud needs to push security alerts to GitHub

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Diperlukan SonarCloud untuk analisis akurat pada 'new code'

      - name: üü¢ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Sesuaikan dengan versi Node.js yang digunakan proyek kamu

      - name: üì¶ Install Node.js dependencies
        run: npm ci # atau yarn install --frozen-lockfile jika kamu menggunakan Yarn

      - name: üß™ Run Jest Tests
        run: npm test # Asumsi script 'test' di package.json kamu menjalankan Jest
        # Jika kamu ingin Jest menghasilkan laporan untuk SonarCloud, tambahkan argumen output:
        # run: npm test -- --coverage --coverageReporters=lcov --testResultsProcessor="jest-sonar-reporter"

      - name: ‚òï Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17' # Sesuaikan versi Java yang dibutuhkan SonarCloud Scanner

      - name: SonarCloud Scan üå•Ô∏è
        # Jika SonarCloud Quality Gate gagal, job akan berhenti di sini.
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=psokelompok11
            -Dsonar.projectKey=diawyx_calender
            # Jika kamu ingin SonarCloud membaca laporan coverage dari Jest:
            # -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

  # --- Job 2: Build and Push Docker Image (Tergantung pada keberhasilan Job 1) ---
  build-and-push-docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: code-quality-and-test # Job ini akan berjalan HANYA JIKA 'code-quality-and-test' sukses
    if: needs.code-quality-and-test.result == 'success' # Pastikan hanya berjalan jika job sebelumnya sukses

    steps:
      - name: ‚¨áÔ∏è Checkout code (for Docker build)
        uses: actions/checkout@v4
        # Tidak perlu fetch-depth: 0 lagi karena SonarCloud sudah di job sebelumnya

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üê≥ Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: ‚¨ÜÔ∏è Build and Push Docker image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_IMAGE_NAME }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_IMAGE_NAME }}:latest
