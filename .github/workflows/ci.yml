name: CI Pipeline - Build, Scan, Push to Docker Hub

on:
  push:
    branches:
      - main # Atau branch develop, feature/*, dll.
  pull_request:
    branches:
      - main

env:
  # Variabel untuk SonarQube (WAJIB diisi di GitHub Secrets)
  # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  # SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  # Nama image di Docker Hub (otomatis menggunakan nama repository GitHub kamu)
  # Kamu bisa menggantinya jika ingin nama image yang spesifik.
  DOCKERHUB_IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  build-scan-and-push:
    name: Build, Scan, and Push Docker Image to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Diperlukan SonarQube untuk analisis akurat pada 'new code'

      - name: ‚òï Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17' # Sesuaikan versi Java yang dibutuhkan SonarQube Scanner

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- Tahap 1: Build Docker Image (Verifikasi Awal) ---
      - name: üõ†Ô∏è Build Docker image (local verification)
        id: docker_build_verify
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false # Tidak di-push, hanya build untuk verifikasi
          load: true # Memuat image ke local Docker daemon (opsional)
          # Tag lokal sementara, tidak akan di-push
          tags: ${{ env.DOCKERHUB_IMAGE_NAME }}:build-verify-${{ github.sha }}

      # --- Tahap 2: Analisis Kualitas Kode Statis ---
      - name: SonarQube ‚úÖ Static Code Analysis
        # Langkah ini berjalan jika 'docker_build_verify' sukses.
        # Jika SonarQube Quality Gate gagal, job akan berhenti di sini.
        uses: sonarsource/sonarqube-scan-action@master # Pertimbangkan versi spesifik
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        # Tambahkan 'with: args: ...' jika ada parameter SonarQube Scanner tambahan

      # --- Tahap 3: Login & Push Docker Image ke Docker Hub ---
      # Langkah ini hanya berjalan jika semua langkah sebelumnya (termasuk SonarQube scan) berhasil.
      - name: üê≥ Log in to Docker Hub
        if: success() # Hanya jika SonarQube scan sukses
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # WAJIB diisi di GitHub Secrets
          password: ${{ secrets.DOCKERHUB_TOKEN }}    # WAJIB diisi di GitHub Secrets

      - name: ‚¨ÜÔ∏è Build and Push Docker image to Docker Hub
        if: success() # Memastikan semua langkah sebelumnya sukses
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true # Image akan di-push ke Docker Hub
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_IMAGE_NAME }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_IMAGE_NAME }}:latest
          # Jika repository Docker Hub kamu adalah private, pastikan token memiliki izin yang sesuai.
